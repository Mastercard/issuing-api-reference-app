<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mastercard.developers</groupId>
	<artifactId>issuing-api-reference-app</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>issuing-api-reference-app</name>
	<description>Mastercard Processing APMEA Issuing Digital First APIs - Reference Application</description>
	<url>https://github.com/Mastercard/issuing-api-reference-app</url>
	
	<properties>
		<openapitools.version>4.3.1</openapitools.version>
		<java.version>1.8</java.version>
		<client-encryption-version>1.7.1</client-encryption-version>
		<default-package>com.mastercard.developer.issuing</default-package>
		<ref-app-main-class>IssuingApiClientReferenceAppMain</ref-app-main-class>
		<okhttp-version>4.9.1</okhttp-version>
		<gson-version>2.8.6</gson-version>
		<gson-fire-version>1.8.5</gson-fire-version>
		<swagger-core-version>1.6.2</swagger-core-version>
		<lmax.disruptor.version>3.4.2</lmax.disruptor.version>
		<google.code.findbugs.version>3.0.2</google.code.findbugs.version>
		<org.awaitility.version>3.1.6</org.awaitility.version>
		<apache.maven.plugins.version>3.0.0-M4</apache.maven.plugins.version>
		<jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
		<javax.annotation.version>1.3.2</javax.annotation.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<log4j.version>2.17.1</log4j.version>
		<junit-version>4.13.1</junit-version>
		<mockito-core-version>2.23.4</mockito-core-version>
		<commons-codec-version>1.15</commons-codec-version>
		<lombok-version>1.18.22</lombok-version>
	</properties>

	<dependencies>
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- Required for Async logger -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>${lmax.disruptor.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>${google.code.findbugs.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson-version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>io.gsonfire</groupId>
			<artifactId>gson-fire</artifactId>
			<version>${gson-fire-version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${okhttp-version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
			<version>${okhttp-version}</version>
		</dependency>
		<dependency>
			<groupId>com.mastercard.developer</groupId>
			<artifactId>client-encryption</artifactId>
			<version>${client-encryption-version}</version>
		</dependency>
		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-core-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${org.awaitility.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>openapi-generator-cli</artifactId>
			<version>${openapitools.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation.version}</version>
		</dependency>
		<!-- Hex encoding support -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec-version}</version>
		</dependency>
		<!-- Lombok annotations to reduce boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok-version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${default-package}.main.${ref-app-main-class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<argLine>@{argLine} -Xmx1024m -XX:MaxPermSize=512m</argLine>
				</configuration>
				<executions>
					<execution>
						<id>before-test-execution</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-output/jacoco-tests.exec
							</destFile>
							<propertyName>surefire.jacoco.args</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>after-test-execution</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-tests.exec
							</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-test-coverage-report
							</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>before-integration-test-execution</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec
							</destFile>
							<propertyName>failsafe.jacoco.args</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>after-integration-test-execution</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec
							</dataFile>
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report
							</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/jacoco-output/
									</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-output/merged.exec
							</destFile>
						</configuration>
					</execution>
					<execution>
						<id>create-merged-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/merged.exec
							</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report
							</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>CLASS</element>
									<excludes>
										<exclude>${default-package}.generated.*</exclude>
										<exclude>*${ref-app-main-class}</exclude>
										<exclude>${default-package}.util.*</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>95%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
							<dataFile>${project.build.directory}/jacoco-output/merged.exec
							</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- REST Clients -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapitools.version}</version>
				<executions>
					<execution>
						<id>authorization-management REST Client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/yaml_specs/authorization-management-apis.yml</inputSpec>
							<generatorName>java</generatorName>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${default-package}.generated.apis</apiPackage>
							<modelPackage>${default-package}.generated.models</modelPackage>
							<invokerPackage>${default-package}.generated.invokers</invokerPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<dateLibrary>java8</dateLibrary>
								<enablePostProcessFile>true</enablePostProcessFile>
							</configOptions>
							<typeMappings>
								<typeMapping>Date=LocalDate</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
					<execution>
						<id>card-controls REST Client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/yaml_specs/card-controls-apis.yml
							</inputSpec>
							<generatorName>java</generatorName>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${default-package}.generated.apis</apiPackage>
							<modelPackage>${default-package}.generated.models</modelPackage>
							<invokerPackage>${default-package}.generated.invokers
							</invokerPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<dateLibrary>java8</dateLibrary>
								<enablePostProcessFile>true</enablePostProcessFile>
							</configOptions>
							<typeMappings>
								<typeMapping>Date=LocalDate</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
					<execution>
						<id>card-issuance REST Client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/yaml_specs/card-issuance-apis.yml
							</inputSpec>
							<generatorName>java</generatorName>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${default-package}.generated.apis</apiPackage>
							<modelPackage>${default-package}.generated.models</modelPackage>
							<invokerPackage>${default-package}.generated.invokers
							</invokerPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<dateLibrary>java8</dateLibrary>
								<enablePostProcessFile>true</enablePostProcessFile>
							</configOptions>
							<typeMappings>
								<typeMapping>Date=LocalDate</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
					<execution>
						<id>card-management REST Client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/yaml_specs/card-management-apis.yml
							</inputSpec>
							<generatorName>java</generatorName>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${default-package}.generated.apis</apiPackage>
							<modelPackage>${default-package}.generated.models</modelPackage>
							<invokerPackage>${default-package}.generated.invokers
							</invokerPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<dateLibrary>java8</dateLibrary>
								<enablePostProcessFile>true</enablePostProcessFile>
							</configOptions>
							<typeMappings>
								<typeMapping>Date=LocalDate</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
					<execution>
						<id>transaction-management REST Client</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/yaml_specs/transaction-management-apis.yml
							</inputSpec>
							<generatorName>java</generatorName>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${default-package}.generated.apis</apiPackage>
							<modelPackage>${default-package}.generated.models</modelPackage>
							<invokerPackage>${default-package}.generated.invokers
							</invokerPackage>
							<configOptions>
								<sourceFolder>src/gen/java/main</sourceFolder>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<dateLibrary>java8</dateLibrary>
								<enablePostProcessFile>true</enablePostProcessFile>
							</configOptions>
							<typeMappings>
								<typeMapping>Date=LocalDate</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
