openapi: 3.0.3
info:
  title: Authorization Management API
  description: >-
    The authorization management API allows users to authenticates the client
    and authorize client to perform various operations like Change PIN,
    financial transaction, etc.
  contact:
    name: API Support
    url: 'https://developer.mastercard.com/support'
    email: apisupport@mastercard.com
  version: 2.0.0
servers:
  - description: Sandbox server
    url: >-
      https://sandbox.mi.api.mastercard.com/mi-issuing-sandbox/authorization-management/
  - description: MEA MTF/UAT server
    url: 'https://mtf.mea.api.mastercard.com/mi-issuing/authorization-management/'
  - description: SA MTF/UAT server
    url: 'https://mtf.sa.api.mi.mastercard.com/mi-issuing/authorization-management/'
  - description: MEA Production server
    url: 'https://mea.api.mastercard.com/mi-issuing/authorization-management/'
  - description: SA Production server
    url: 'https://sa.api.mi.mastercard.com/mi-issuing/authorization-management/'
tags:
  - name: User Authentication
    description: User authentication and token generation
paths:
  '/authentications/cards/{card_id}/tokens':
    post:
      tags:
        - User Authentication
      summary: >-
        **Issue Authentication Token** - Authenticate client and generate
        one-time use token for intended operation.
      description: >-
        This API always authenticates the client based on the card ID and card
        PIN, except for 'PIN_RESET' operation. In case of 'PIN_RESET' operation,
        its assumed that client has forgotten card PIN and hence he is
        authenticated based on card ID and  other parameters (date of birth,
        CVV2/CVC2, or card expiry date).  These parameters are configured at
        institution level in the MI Issuing customer portal.  After successful
        authentication, the API returns a one-time authentication token
        (randomly generated 16 bytes number). This token is used by the API
        consumer to call the second leg of the API that requires the
        authentication token immediately.For example, the API consumer can use
        the authentication token issued by this API to perform the PIN change
        operation using the update card PIN API.The generated authentication
        token is valid only for 3 minutes (180 seconds).
      operationId: createToken
      x-mastercard-api-encrypted: true
      parameters:
        - $ref: '#/components/parameters/BankCode'
        - $ref: '#/components/parameters/CorrelationID'
        - $ref: '#/components/parameters/Source'
        - $ref: '#/components/parameters/EndUserID'
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/CardID'
      requestBody:
        $ref: '#/components/requestBodies/ClientAuthenticationRequest'
      responses:
        '201':
          $ref: '#/components/responses/AuthenticationTokenResponse'
        '400':
          $ref: '#/components/responses/BadPostRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
components:
  schemas:
    RequestValidityTime:
      description: >-
        Validity of the API request. It protects the API from unauthorized
        request or man-in-the-middle (MITM) attacks <br/>For example, if the
        validity of the API request is set for a maximum of 5 minutes (including
        retry attempts), and someone tries to post the same request after 5
        minutes, then the system rejects the API request without processing.
      type: object
      required:
        - dataValidUntilTimestamp
      properties:
        dataValidUntilTimestamp:
          type: string
          format: date-time
          description: >-
            The date and time after which the request is considered as invalid.
            If the timestamp of the institution is greater than this timestamp,
            the API request is considered as expired and is returned.<br/>The
            dataValidUntilTimestamp parameter is converted into the institution
            time zone before comparing it with the institution date and time. It
            is expressed in ISO 8601 extended format. Must be either <br/>
            YYYY-MM-DDThh:mm:ss[.sss]Z<br/> or YYYY-MM-DDThh:mm:ss[.sss] (+|-)
            hh:mm where [.sss] is optional and can be 1 to 3 digits.
          minLength: 20
          maxLength: 29
          example: '2020-07-04T12:09:56.450-07:00'
    ClientAuthentication:
      allOf:
        - $ref: '#/components/schemas/RequestValidityTime'
      type: object
      description: Client or card details used to verify the client.
      required:
        - intent
      properties:
        intent:
          $ref: '#/components/schemas/AuthenticationTokenIntent'
        client:
          $ref: '#/components/schemas/ClientSecret'
        card:
          $ref: '#/components/schemas/CardSecret'
    ClientSecret:
      type: object
      properties:
        birthDate:
          type: string
          format: date
          description: >-
            Client's date of birth.<br/>This field is applicable only while
            requesting token for 'PIN_RESET' intent. <br/> **Conditional
            Mandatory**<font color='red'>* </font> field - Required if "Date of
            birth" field is selected on "Card Management > Institution Parameter
            Setup > Online PIN Set Configuration [ISS027]" screen. <br/> Format
            - It is expressed in ISO 8601 - `YYYY-MM-DD`
          example: '1991-06-21'
    CardSecret:
      type: object
      properties:
        pin:
          $ref: '#/components/schemas/EncryptedPinBlock'
        cvv:
          type: string
          description: >-
            The card verification value (CVV), card security code (CSC), card
            verification code (CVC), or card code verification (CCV) that is
            found on the back of a card. It provides an additional measure of a
            card security. <br/>This field is applicable only while requesting
            token for 'PIN_RESET' intent. <br/> **Conditional Mandatory**<font
            color='red'>* </font> field - Required if "CVV2/CVC2" field is
            selected on "Card Management > Institution Parameter Setup > Online
            PIN Set Configuration [ISS027]" screen.
          minLength: 3
          maxLength: 5
          pattern: '[0-9]+'
          example: '345'
        expiry:
          type: string
          description: >-
            It is the expiry date of the card expressed in date format -
            `MM/YY`. This is not applicable for LVC. <br/>This field is
            applicable only while requesting token for 'PIN_RESET' intent. <br/>
            **Conditional Mandatory**<font color='red'>* </font> field -
            Required if "Expiry date" field is selected on "Card Management >
            Institution Parameter Setup > Online PIN Set Configuration [ISS027]"
            screen.
          pattern: '(0[1-9]|1[0-2])/[0-9]{2}'
          example: 11/30
    TokenDetails:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/AuthenticationToken'
        tokenValidUntilTimestamp:
          $ref: '#/components/schemas/AuthenticationTokenValidUntilTimestamp'
    AuthenticationTokenIntent:
      type: string
      description: >-
        Intent specifies the type of transaction or operation that would be
        executed using the generated token. <br/> **Valid values:**  

        * `PIN_RESET` - Generate the token for PIN set operation, post
        successful client authentication using parameters other than card PIN  

        * `PIN_CHANGE` - Generate the token for PIN change operation, post
        successful card PIN authentication  

        * `TOPUP` - Generate the token for prepaid card account top up
        transaction, post successful card PIN authentication  

        * `BALANCE_INQUIRY` - Generate the token for balance inquiry
        transaction, post successful card PIN authentication  

        * `MINI_STATEMENT` - Generate the token for transaction history / Mini
        Statement operation, post successful card PIN authentication  

        * `PURCHASE` - Generate the token for purchase transaction, post
        successful card PIN authentication  

        * `TRANSFER_DEBIT` - Generate the token for transfer debit transaction,
        post successful card PIN authentication  

        * `TRANSFER_CREDIT` - Generate the token for transfer credit
        transaction, post successful card PIN authentication  

        * `CASH_ADVANCE` - Generate the token for cash advance transaction, post
        successful card PIN authentication
      example: PIN_RESET
    AuthenticationToken:
      type: string
      description: >-
        One-time token to authorize a user for a single transaction that is of a
        specific intent such as PURCHASE transaction. This token is
        automatically generated and is valid until the date and time mentioned
        under tokenValidUntilTimesStamp.
      minLength: 32
      maxLength: 36
      pattern: '[a-zA-Z0-9_-]+'
      example: ac97d177-9345-4934-8343-0f91a7a02836
    AuthenticationTokenValidUntilTimestamp:
      type: string
      format: date-time
      description: >-
        The date and time after which the token is considered as invalid. If
        this timestamp is less than the current timestamp of institution, the
        current token is treated as an invalid token. <br/>It is expressed in
        ISO 8601 extended format: YYYY-MM-DDThh:mm:ss[.sss] (+|-) hh:mm where
        [.sss] is optional and can be 1 to 3 digits.
      minLength: 20
      maxLength: 29
      example: '2020-07-04T12:09:56.450-07:00'
    EncryptedPinBlock:
      description: Encrypted card PIN block with encrypted 3-DES or AES key.
      type: object
      properties:
        encryptedBlock:
          type: string
          description: >-
            It is the PIN block in encrypted format. Both encryptedBlock and
            encryptedKey are mutually inclusive. <br/> **Supported formats:** 


            * `ISO 9564-1 Format 0` - PIN Block generated with ISO 9564-1
            **Format-0**. The generated PIN Block is encrypted using **3-DES**
            key  

            * `ISO 9564-1 Format 4` - PIN Block generated with ISO 9564-1
            **Format-4**. The generated PIN Block is encrypted using **AES**
            key. Not supported, reserved for future use.
          minLength: 16
          maxLength: 32
          pattern: '[A-F0-9]+'
          example: 7E5883929BFB4C197285781D4A5ABE0C
        encryptedKey:
          type: string
          description: >-
            One-time use 3-DES or AES session key encrypted using payShield HSM
            RSA public key. <br/> **Conditional Mandatory**<font color='red'>*
            </font> field - Required if encryptedPinBlock field is present in
            the request.
          minLength: 32
          maxLength: 512
          pattern: '[a-zA-Z0-9]+'
          example: >-
            761c774372f410dee6ac4dd4a06e4dee6f7f26104de41...a5ae627ea35ccde74b3ce93cadfc6c0fa6c7bda574
        algorithm:
          $ref: '#/components/schemas/EncryptionAlgorithm'
    EncryptionAlgorithm:
      type: string
      description: >-
        Cryptographic encryption algorithm that is used to generate the
        encryption key and encrypt the PIN block. Currently only 3-DES
        encryption algorithm is supported. If value is not provided in the
        input, then default 3-DES algorithm is considered. <br/> **Valid
        values:**  

        * `3DES` - 3-DES encryption(default value)  

        * `AES` - AES encryption(Not supported, reserved for future use)
      example: 3DES
    ErrorMessage:
      required:
        - Description
        - ReasonCode
        - Recoverable
        - Source
      type: object
      properties:
        Source:
          type: string
          description: The application or component that generated this error.
          minLength: 3
          maxLength: 50
          example: MI-Issuing
        ReasonCode:
          type: string
          description: >-
            Reason code is a unique constant identifying the error case
            encountered during request processing.
          minLength: 5
          maxLength: 100
          example: MISSING_REQUIRED_FIELD
        Description:
          type: string
          description: Human-readable short description of the reasonCode.
          minLength: 10
          maxLength: 250
          example: Missing Required Field '<Field-Name>'
        Details:
          type: string
          description: >-
            Optional detailed description provides information about data
            received and calculated during request processing. This helps the
            user to diagnose errors.
          minLength: 0
          maxLength: 1000
          example: This is mandatory field while requesting for new card.
        Recoverable:
          type: boolean
          description: >-
            Recoverable flag indicates whether this error is always returned for
            this request, or retrying could change the outcome. For example,
            'true' or 'false'.
          example: false
    Errors:
      required:
        - Error
      type: object
      properties:
        Error:
          type: array
          description: Errors array wrapped in an error object
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ErrorsInfo:
      required:
        - Errors
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
  parameters:
    CardID:
      name: card_id
      in: path
      description: >-
        A unique system-generated ID that is assigned to a card during card
        issuance. This ID can be used instead of the card number while sharing
        PCI sensitive data.  

        * minLength: 32  

        * maxLength: 32  

        * pattern: [A-Z0-9]+
      required: true
      schema:
        type: string
        minLength: 32
        maxLength: 32
        pattern: '[A-Z0-9]+'
      example: C24B56D71AA2E015E053F482A80ABD00
    CorrelationID:
      name: X-MC-Correlation-ID
      in: header
      description: >-
        Correlation ID, also known as Transit ID or Request ID, is a unique
        identifier value attached to a particular transaction or event chain.The
        Correlation ID also helps in auditing, debugging, and tracing the
        request execution flow. <BR/> It is recommended to generate universally
        unique identifier (UUID) in compliance with RFC 4122.<BR/> If the
        Correlation ID is not received in the incoming request, the Mastercard
        Processing platform generates a universally unique identifier (UUID)
        dynamically and assigns it to the request. The Correlation ID is always
        added to the response header to provide end to end traceability.  

        * minLength: 6  

        * maxLength: 36  

        * pattern: [a-zA-Z0-9_-]+
      schema:
        type: string
        minLength: 6
        maxLength: 36
        pattern: '[a-zA-Z0-9_-]+'
      example: ac97d177-9345-4934-8343-0f91a7a02836
    BankCode:
      name: X-MC-Bank-Code
      in: header
      description: >-
        It is a 6 digit bank/institution identifier code. <br/> **Conditional
        Mandatory**<font color='red'>* </font> field - Required to be passed  by
        third party vendors or service provider (like 3-D Secure authenticator)
        who has access to the data of multiple banks, supported by legal
        agreement and access grants.  

        * minLength: 6  

        * maxLength: 6  

        * pattern: [0-9]+
      schema:
        type: string
        minLength: 6
        maxLength: 6
        pattern: '[0-9]+'
      example: '112233'
    Source:
      name: X-MC-Source
      in: header
      description: >-
        Value identifying the origin or source of a transaction. The list of
        possible sample values are available in the database and shared in the
        API_SOURCE_VALUES list under "Card Management > Institution Parameter
        Setup > System Codes [ISSS15]". This field is used only for logging
        purpose.<br/> 


        * minLength: 3  

        * maxLength: 3  

        * pattern: [A-Z0-9]+ <br/> <br/> **Few sample values:** <br/>  

        * `IVR` - Interactive Voice Response  

        * `MAP` - Mobile Application  

        * `ATM` - Automated Teller Machine  

        * `NBN` - Net Banking Application  

        * `POS` - Point of Sale  

        * `SCH` - Scheme  

        * `CBS` - Core Banking System  

        * `SMS` - Short Message Service  

        * `ACS` - Access Control Server  

        * `ONS` - On-Us Transaction  

        * `OTH` - Other
      schema:
        type: string
        minLength: 3
        maxLength: 3
        pattern: '[A-Z0-9]+'
      example: MAP
    IdempotencyKey:
      name: X-MC-Idempotency-Key
      in: header
      required: true
      description: >-
        An idempotency key is a unique value that is generated by a client and
        sent to an API along with a request. If a request should fail partway
        through, the client retries with the same idempotency key value, and the
        server uses it to look up the state of request and continue from where
        it left off. Recommended to generate universally unique identifier
        (UUID) compliant with `RFC 4122`.
      schema:
        type: string
        pattern: '^[a-zA-Z0-9_-]{6,36}$'
      example: bc57d177-4593-3449-8343-0d81a7a02947
    EndUserID:
      name: X-MC-Client-Application-User-ID
      in: header
      description: >-
        A unique identifier to track end user who is performing action at the
        client's or consumer's end. <BR/>This field is used only for logging
        purpose.  

        * minLength: 3  

        * maxLength: 50  

        * pattern: [a-zA-Z0-9_-]+
      schema:
        type: string
        minLength: 3
        maxLength: 50
        pattern: '[a-zA-Z0-9_-]+'
      example: S0648-IN
  headers:
    Response-Correlation-ID:
      description: >-
        Returns the request identifier (like UUID) received in client request
        header or generated by the server.
      schema:
        type: string
        minLength: 6
        maxLength: 36
      example: ac97d177-9345-4934-8343-0f91a7a02836
  requestBodies:
    ClientAuthenticationRequest:
      description: Secret information to validate the card or client details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientAuthentication'
      required: true
  responses:
    AuthenticationTokenResponse:
      description: The authentication token was successfully created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenDetails'
      headers:
        X-MC-Correlation-ID:
          $ref: '#/components/headers/Response-Correlation-ID'
    BadPostRequestError:
      description: >-
        The request failed due to invalid or missing value. The value could be a
        header value, a query parameter value, or a request body property value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsInfo'
          examples:
            MissingRequiredFieldExample:
              $ref: '#/components/examples/MissingRequiredFieldExample'
            InvalidFieldValueExample:
              $ref: '#/components/examples/InvalidFieldValueExample'
            InvalidFieldFormatExample:
              $ref: '#/components/examples/InvalidFieldFormatExample'
            InvalidFieldLengthExample:
              $ref: '#/components/examples/InvalidFieldLengthExample'
            CryptographyErrorExample:
              $ref: '#/components/examples/CryptographyErrorExample'
      headers:
        X-MC-Correlation-ID:
          $ref: '#/components/headers/Response-Correlation-ID'
    UnauthorizedError:
      description: Authentication information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsInfo'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
      headers:
        X-MC-Correlation-ID:
          $ref: '#/components/headers/Response-Correlation-ID'
    ForbiddenError:
      description: Insufficient permissions for interacting with the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsInfo'
          examples:
            ForbiddenExample:
              $ref: '#/components/examples/ForbiddenExample'
      headers:
        X-MC-Correlation-ID:
          $ref: '#/components/headers/Response-Correlation-ID'
  examples:
    UnauthorizedExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: UNAUTHORIZED
              Description: We couldn't recognize you
              Recoverable: false
              Details: >-
                The user does not have valid certificate for the target
                resource.
    ForbiddenExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: AUTHORIZATION_ERROR
              Description: It seems you don't have permission to access this API
              Recoverable: false
              Details: >-
                Please ensure that access has been granted to the user in
                customer portal
    MissingRequiredFieldExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: MISSING_REQUIRED_FIELD
              Description: Missing required field '<Field-Name>'
              Recoverable: false
              Details: null
    InvalidFieldValueExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: INVALID_FIELD_VALUE
              Description: '''<Field-Name>'' field value ''<Field-Value>'' is invalid'
              Recoverable: false
    InvalidFieldFormatExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: INVALID_FIELD_FORMAT
              Description: '''<Field-Name>'' field value ''<Field-Value>'' format is invalid'
              Recoverable: false
    InvalidFieldLengthExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: INVALID_FIELD_LENGTH
              Description: '''<Field-Name>'' size must be between 1 and 3'
              Recoverable: false
    CryptographyErrorExample:
      value:
        Errors:
          Error:
            - Source: MI-Issuing
              ReasonCode: CRYPTOGRAPHY_ERROR
              Description: Error occurred while decryption of the encrypted request payload
              Recoverable: false
              Details: null
