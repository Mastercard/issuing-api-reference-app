mastercard.issuing.client.debug.mode=true

# Sample configuration 

# ##########################################################################################################################################
# Sandbox environment
# ##########################################################################################################################################

# Mastercard Processing APMEA Issuing APIs base URI/path
mastercard.issuing.client.api.base.path=https://sandbox.mi.api.mastercard.com/mi-issuing-sandbox

# ------------------------------------------------------------------------------------------------------------------------------------------
# Transport Level Encryptin using mTLS
# ------------------------------------------------------------------------------------------------------------------------------------------

# mTLS Certificate - Format PKCS #12 (including chain)
mastercard.issuing.client.ref.app.mtls.keystore.file=mastercard-issuing-api-sandbox-mtls-pkcs12-20211008131438.pfx
mastercard.issuing.client.ref.app.mtls.keystore.password=MastercardSandbox@2022
# Note: It is recommended to store your private keys in physical devices such as USB Tokens, Smart Cards, or Hardware Storage Module (HSM)

# ------------------------------------------------------------------------------------------------------------------------------------------
# Message Level PIN Encryption - Mastercard Public Key for Card PIN Encryption
# ------------------------------------------------------------------------------------------------------------------------------------------
mastercard.issuing.client.ref.app.pin.encryption.tdea.public.key.file=mi-apac-sandbox-pin-encryption-tdea.key
mastercard.issuing.client.ref.app.pin.encryption.algorithm=DESede/ECB/NoPadding

# OAEP algorithm - Currently only NONE supported
mastercard.issuing.client.ref.app.encryption.oaep.algorithm=NONE

# ------------------------------------------------------------------------------------------------------------------------------------------
# Message Level Payload Encryption Option 1 - Recommended (Different AES key for request & response) - Mastercard & Client both sharing their Public Key
# ------------------------------------------------------------------------------------------------------------------------------------------
# Section 2 - Part 1 - API request payload/data encryption - RSA Public Key - Format PKCS #8 (excluding chain)
mastercard.issuing.client.ref.app.encryption.public.key.file=mastercard-issuing-api-sandbox-message-encryption-pkcs8-20211008205512.cer
mastercard.issuing.client.ref.app.encryption.public.key.fingerprint=e235968948a44fed8c4fba33eb57e1a8343a33cc9e406fd36155ef0ebb4f4173

# Section 2 - Part 2 -  API response payload/data decryption - RSA Private Key - Format PKCS #12 (excluding chain)
mastercard.issuing.client.ref.app.encryption.private.key.keystore.file=mastercard-issuing-api-sandbox-mtls-pkcs12-20211008131438.pfx
mastercard.issuing.client.ref.app.encryption.private.key.keystore.password=MastercardSandbox@2022

# ------------------------------------------------------------------------------------------------------------------------------------------
# Message Level Payload Encryption Option 2 (Common AES key for request & response) - only Mastercard shares their Public Key
# ------------------------------------------------------------------------------------------------------------------------------------------
# Section 2 - Part 1 - API request payload/data encryption - RSA Public Key - Format PKCS #8 (excluding chain)
mastercard.issuing.client.ref.app.encryption.public.key.file=mastercard-issuing-api-sandbox-message-encryption-pkcs8-20211008205512.cer
mastercard.issuing.client.ref.app.encryption.public.key.fingerprint=e235968948a44fed8c4fba33eb57e1a8343a33cc9e406fd36155ef0ebb4f4173

