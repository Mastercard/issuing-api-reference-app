mi.client.debug.mode=true

# Sample configuration 

# ##########################################################################################################################################
# Sandbox environment
# ##########################################################################################################################################

# Mastercard Processing APMEA Issuing APIs base URI/path
mi.api.base.path=https://sandbox.mi.api.mastercard.com/mi-issuing-sandbox

# ------------------------------------------------------------------------------------------------------------------------------------------
# Transport Level Encryptin using mTLS
# ------------------------------------------------------------------------------------------------------------------------------------------

# mTLS Certificate - Format PKCS #12 (including chain)
mi.api.mtls.keystore.file=sandbox/mi-sandbox-mtls-pkcs12-20211008131438.pfx
mi.api.mtls.keystore.password=<TODO:Set password>
# Note: It is recommended to store your private keys in physical devices such as USB Tokens, Smart Cards, or Hardware Storage Module (HSM)

# ------------------------------------------------------------------------------------------------------------------------------------------
# Message Level Payload Encryption Configuration
# ------------------------------------------------------------------------------------------------------------------------------------------

# OAEP algorithm - Currently only NONE supported
mi.api.encryption.oaep.algorithm=NONE

# Mastercard RSA Public Key for API request payload/data encryption - Format PKCS #8 (excluding chain)
# ------------------------------------------------------------------------------------------------------------------------------------------
mi.api.encryption.public.key.file=sandbox/mi-sandbox-message-encryption-pkcs8-20211008205512.cer
mi.api.encryption.public.key.fingerprint=e235968948a44fed8c4fba33eb57e1a8343a33cc9e406fd36155ef0ebb4f4173

# Optional (Recommended) - Bank/Institution RSA Private Key for API request payload/data decryption - PKCS #12 (excluding chain)
# Scenario - Different AES key generated for request & response - Mastercard & Client both sharing their Public Key for data encryption
# If bank has shared their Public Key with Mastercard for response encryption then bank must configure their Private key to decrypt response
# ------------------------------------------------------------------------------------------------------------------------------------------
#mi.api.encryption.private.key.keystore.file=sandbox/mi-sandbox-message-decryption-pkcs12-20211008131438.pfx
#mi.api.encryption.private.key.keystore.password=<TODO:Set password>
#mi.api.encryption.private.key.alias=sandbox-bank-private-key

# ------------------------------------------------------------------------------------------------------------------------------------------
# Message Level PIN Encryption - Mastercard Public Key for Card PIN Encryption
# ------------------------------------------------------------------------------------------------------------------------------------------
mi.api.pin.encryption.tdea.public.key.file=sandbox/mi-sandbox-pin-encryption-tdea-20220505161856.key
mi.api.pin.encryption.secret.key.algorithm=DESede
mi.api.pin.encryption.secret.key.transformation=DESede/ECB/NoPadding

